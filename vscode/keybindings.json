[
    {
        "key": "shift+alt+1",
        "command": "workbench.action.editorLayoutSingle"
    },
    {
        "key": "shift+alt+2",
        "command": "workbench.action.editorLayoutTwoColumns"
    },
    {
        "key": "shift+alt+3",
        "command": "workbench.action.editorLayoutThreeColumns"
    },
    {
        "key": "ctrl+alt+shift+l",
        "command": "workbench.action.moveEditorToRightGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+shift+h",
        "command": "workbench.action.moveEditorToLeftGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+shift+n",
        "command": "workbench.action.moveEditorToNextGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+shift+p",
        "command": "workbench.action.moveEditorToPreviousGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+k",
        "command": "cursorUp",
        "when": "inputFocus && !inKeybindings"
    },
    {
        "key": "alt+j",
        "command": "cursorDown",
        "when": "inputFocus"
    },
    {
        "key": "alt+h",
        "command": "cursorLeft",
        "when": "inputFocus"
    },
    {
        "key": "alt+l",
        "command": "cursorRight",
        "when": "inputFocus"
    },
    {
        "key": "up",
        "command": "cursorUp",
        "when": "editorTextFocus && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "down",
        "command": "cursorDown",
        "when": "editorTextFocus && !inDebugRepl && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "k",
        "command": "cursorUp",
        "when": "editorWordWrap && editorTextFocus && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "j",
        "command": "cursorDown",
        "when": "editorWordWrap && editorTextFocus && !inDebugRepl && vim.mode == 'Normal' && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "o",
        "command": "markdown.extension.onCtrlEnterKey",
        "when": "editorLangId == 'markdown' && editorTextFocus && vim.mode == 'Normal'"
    },
    {
        "key": "ctrl+alt+k",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+j",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+,",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    {
        "key": "shift+alt+k",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+j",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+h",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "macros.closePanelSidebar"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+shift+j",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+shift+j",
        "command": "scrollLineDown",
        "when": "textInputFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+shift+k",
        "command": "scrollLineUp",
        "when": "textInputFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    },
    {
        "key": "h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "l",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "alt+delete",
        "command": "deleteWordPartRight"
    },
    {
        "key": "shift+alt+backspace",
        "command": "deleteRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f11",
        "command": "workbench.action.toggleFullScreen"
    },
    {
        "key": "ctrl+shift+f11",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "alt+.",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen",
        "when": "!terminalFocus && !inDebugRepl"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenPreviousEditor",
        "when": "!terminalFocus && !inDebugRepl"
    },
    {
        "key": "ctrl+shift+alt+j",
        "command": "editor.action.joinLines"
    },
    {
        "key": "f6",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "shift+f5",
        "command": "workbench.action.debug.pause",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+alt+backspace",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f5",
        "command": "workbench.action.debug.selectandstart"
    },
    {
        "key": "ctrl+shift+w",
        "command": "activitusbar.showDebugView"
    },
    {
        "key": "alt+\\",
        "command": "workbench.debug.action.focusVariablesView",
        "when": "inDebugMode"
    },
    {
        "key": "alt+\\",
        "command": "search.action.focusSearchList",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+shift+'",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "search.action.replaceAll",
        "when": "searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+alt+y",
        "command": "workbench.action.debug.selectandstart",
        "when": "!inDebugMode"
    },
    {
        "key": "alt+d",
        "command": "workbench.debug.action.toggleRepl"
    },
    {
        "key": "shift+alt+n",
        "command": "notifications.focusToasts"
    },
    {
        "key": "ctrl+alt+p",
        "command": "workbench.actions.view.problems"
    },
    {
        "key": "ctrl+shift+[",
        "command": "editor.action.revealDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor  && editorLangId != 'markdown'"
    },
    {
        "key": "ctrl+shift+]",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor && editorLangId != 'markdown'"
    },
    {
        "key": "ctrl+alt+b",
        "command": "bracketeer.selectBracketContent"
    },
    {
        "key": "shift+alt+o",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+g l",
        "command": "gitlens.toggleLineBlame"
    },
    {
        "key": "ctrl+shift+j",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.openNextRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.openPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+-",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "ctrl+i",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+`",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "ctrl+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "f11",
        "command": "-workbench.action.toggleFullScreen"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenPreviousEditor"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegexTerminalFocus",
        "when": "terminalFocus"
    },
    {
        "key": "alt+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus && searchViewletVisible"
    },
    {
        "key": "f6",
        "command": "-workbench.action.debug.pause",
        "when": "inDebugMode"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "!inDebugMode"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-activitusbar.showDebugView"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+i",
        "command": "-editor.action.formatDocument",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+up",
        "command": "-scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+down",
        "command": "-scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "searchViewletVisible"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.selectAll",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-markdown.showPreviewToSide"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-activitusbar.showScmView"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },
    {
        "key": "ctrl+shift+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+h",
        "command": "-bracketeer.selectBracketContent"
    },
    {
        "key": "shift+alt+o",
        "command": "-editor.action.organizeImports",
        "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+f2",
        "command": "-editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+f2",
        "command": "editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+f9",
        "command": "workbench.debug.viewlet.action.removeAllBreakpoints"
    },
    {
        "key": "ctrl+shift+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.quickOpenNavigateNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+shift+m",
        "command": "markdown.extension.togglePreviewToSide",
        "when": "!terminalFocus && editorLangId == 'markdown'"
    },
    {
        "key": "f7",
        "command": "-editor.action.wordHighlight.next",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "shift+f7",
        "command": "-editor.action.wordHighlight.prev",
        "when": "editorTextFocus && hasWordHighlights"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.diffWithNext",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.diffWithNextInDiff",
        "when": "isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.key..",
        "when": "gitlens:key:."
    },
    {
        "key": "alt+c p",
        "command": "-extension.colorHelper.pick",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+c c",
        "command": "-extension.colorHelper.convert",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+enter",
        "command": "macros.runAllAndRestartKernel",
        "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+alt+,",
        "command": "editor.action.smartSelect.grow"
    },
    {
        "key": "ctrl+alt+shift+p",
        "command": "cursorUp",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+y",
        "command": "-redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+y",
        "command": "-redo"
    },
    {
        "key": "ctrl+shift+0",
        "command": "latex-workshop.actions"
    },
    {
        "key": "alt+enter",
        "command": "latex-workshop.build",
        "when": "editorLangId == 'latex' || latex-structure.active"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+shift+;",
        "command": "macros.openTerminalToSide"
    },
    {
        "key": "ctrl+;",
        "command": "macros.positionPanelRightTerminalFocus",
        "when": "panelPosition == 'bottom'"
    },
    {
        "key": "ctrl+;",
        "command": "macros.positionPanelBottomTerminalFocus",
        "when": "panelPosition == 'right'"
    },
    {
        "key": "ctrl+;",
        "command": "macros.positionPanelRightEditorFocus",
        "when": "editorTextFocus && panelPosition == 'bottom'"
    },
    {
        "key": "ctrl+;",
        "command": "macros.positionPanelBottomEditorFocus",
        "when": "editorTextFocus && panelPosition == 'right'"
    },
    // {
    //     "key": "ctrl+a",
    //     "command": "extension.vim_ctrl+a",
    //     "when": "editorTextFocus && vim.active && vim.use<C-a> && vim.mode != 'Insert'  && !inDebugRepl"
    // },
    {
        "key": "ctrl+q",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+w",
        "command": "macros.focusEditorAndVimCtrlW",
        "when": "explorerViewletFocus && vim.active && vim.use<C-w> && !inDebugRepl"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "shift+alt+-",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "panelPosition == 'right'"
    },
    {
        "key": "shift+alt+=",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "panelPosition == 'right'"
    },
    {
        "key": "shift+alt+-",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "panelPosition == 'bottom'"
    },
    {
        "key": "shift+alt+=",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "panelPosition == 'bottom'"
    },
    {
        "key": "shift+alt+enter",
        "command": "macros.saveAndRunCode",
        "when": "editorFocus && !python.datascience.hascodecells && editorLangId != 'latex'"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.firstEditorInGroup"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    },
    // {
    //     "key": "ctrl+x",
    //     "command": "extension.vim_ctrl+x",
    //     "when": "editorTextFocus && vim.mode != 'Insert' && vim.use<C-x> && !inDebugRepl"
    // },
    // {
    //     "key": "ctrl+x",
    //     "command": "-extension.vim_ctrl+x",
    //     "when": "editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"
    // },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+alt+v",
        "command": "latex-workshop.view",
        "when": "editorLangId == 'latex' || editorLangId == 'tex'"
    },
    {
        "key": "ctrl+alt+v",
        "command": "-latex-workshop.view",
        "when": "!config.latex-workshop.bind.altKeymap.enabled && editorLangId == 'latex'"
    },
    {
        "key": "alt+enter",
        "command": "-latex-workshop.onAltEnterKey",
        "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId == 'latex'"
    },
    {
        "key": "alt+m",
        "command": "markdown.extension.editing.toggleMath",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+m",
        "command": "-markdown.extension.editing.toggleMath",
        "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
    },
    // {
    //     "key": "insert",
    //     "command": "-extension.vim_insert",
    //     "when": "editorTextFocus && vim.active && !inDebugRepl"
    // },
    // {
    //     "key": "ctrl+q",
    //     "command": "-extension.vim_winCtrlQ",
    //     "when": "editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"
    // },
    {
        "key": "ctrl+shift+7",
        "command": "python.runtests",
        "when": "editorLangId == 'python'"
    },
    {
        "key": "shift+alt+c",
        "command": "workbench.action.toggleCenteredLayout"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-toggleexcludedfiles.toggle",
        "when": "filesExplorerFocus"
    },
    {
        "key": "ctrl+shift+v",
        "command": "markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-workbench.action.editor.changeLanguageMode"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-activitusbar.showReplaceViewWithSelection"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+f8",
        "command": "editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "f8",
        "command": "-editor.action.marker.nextInFiles",
        "when": "editorFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "escape",
        "command": "-breadcrumbs.selectEditor",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "escape",
        "command": "list.select",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "terminalFocus && panelPosition == 'bottom'"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.navigateUp",
        "when": "!terminalFocus && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.navigateDown",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.navigateRight",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.navigateLeft",
        "when": "vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+shift+f8",
        "command": "workbench.debug.viewlet.action.disableAllBreakpoints"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "workbench.debug.viewlet.action.enableAllBreakpoints"
    },
    {
        "key": "ctrl+shift+2",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "ctrl+shift+/",
        "command": "python.runLinting"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-notebook.cell.split",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && notebookViewType == 'jupyter-notebook'"
    },
    {
        "key": "ctrl+shift+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+=",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "ctrl+shift+-",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "shift+alt+enter",
        "command": "jupyter.runallcells",
        "when": "editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
    },
    {
        "key": "shift+alt+p",
        "command": "jupyter.restartkernel",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "shift+alt+i",
        "command": "jupyter.interruptkernel",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "shift+alt+i",
        "command": "jupyter.interruptkernel",
        "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
    },
    {
        "key": "alt+enter",
        "command": "python.execInTerminal",
        "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
    },
    {
        "key": "ctrl+shift+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+d",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+alt+d",
        "command": "workbench.action.terminal.kill",
    },
    {
        "key": "ctrl+alt+s",
        "command": "workbench.view.scm"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.compareEditor.focusOtherSide"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.diffWithNext",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.diffWithNextInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.diffWithNextInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /revision/ && gitlens:activeFileStatus =~ /revision/"
    },
    {
        "key": "alt+.",
        "command": "-gitlens.key.alt+.",
        "when": "gitlens:key:."
    },
    {
        "key": "alt+,",
        "command": "-gitlens.diffWithPrevious",
        "when": "editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+,",
        "command": "-gitlens.diffWithPreviousInDiffLeft",
        "when": "editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+,",
        "command": "-gitlens.diffWithPreviousInDiffRight",
        "when": "editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/"
    },
    {
        "key": "alt+,",
        "command": "-gitlens.key.alt+,",
        "when": "gitlens:key:,"
    },
    {
        "key": "ctrl+n",
        "command": "extension.advancedNewFile"
    },
    {
        "key": "ctrl+alt+n",
        "command": "macros.saveAndRunCode"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-extension.advancedNewFile"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    // {
    //     "key": "ctrl+shift+v",
    //     "command": "-markdown.showPreview",
    //     "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    // },
    // {
    //     "key": "ctrl+shift+v",
    //     "command": "-markdown.extension.togglePreview",
    //     "when": "!terminalFocus"
    // },
    // {
    //     "key": "ctrl+shift+v",
    //     "command": "markdown-preview-enhanced.openPreviewToTheSide",
    //     "when": "editorLangId == 'markdown'"
    // },
    // {
    //     "key": "ctrl+k v",
    //     "command": "-markdown-preview-enhanced.openPreviewToTheSide",
    //     "when": "editorLangId == 'markdown'"
    // },
    // {
    //     "key": "ctrl+shift+v",
    //     "command": "-markdown-preview-enhanced.openPreview",
    //     "when": "editorLangId == 'markdown'"
    // },
    // {
    //     "key": "f10",
    //     "command": "merge-conflict.next"
    // },
    // {
    //     "key": "f6",
    //     "command": "-workbench.action.focusNextPart"
    // },
    // {
    //     "key": "f7",
    //     "command": "merge-conflict.accept.incoming"
    // },
    // {
    //     "key": "f6",
    //     "command": "merge-conflict.accept.current"
    // },
    // {
    //     "key": "f8",
    //     "command": "merge-conflict.accept.both"
    // }
    {
        "key": "ctrl+shift+alt+d",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "space l",
        "command": "dendron.lookup",
        "when": "vim.mode != 'Insert' && dendron:pluginActive && editorFocus"
    },
    {
        "key": "space space",
        "command": "dendron.gotoNote",
        "when": "vim.mode != 'Insert' && dendron:pluginActive && editorFocus"
    },
    {
        "key": "space shift+l",
        "command": "dendron.lookupSchema",
        "when": "vim.mode != 'Insert' && dendron:pluginActive && editorFocus"
    },
    {
        "key": "space shift+d",
        "command": "dendron.deleteNode",
        "when": "vim.mode != 'Insert' && dendron:pluginActive && editorFocus"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "command": "-vscode-neovim.send",
        "key": "ctrl+]",
    },
    {
        "command": "-vscode-neovim.escape",
        "key": "ctrl+[",
    },
    {
        "command": "-vscode-neovim.send",
        "key": "ctrl+[",
    },
]